apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: toolkit-
  labels:
    workflows.argoproj.io/archive-strategy: "false"
spec:
  entrypoint: full
  serviceAccountName: workflow
  volumes:
  - name: kaniko-secret
    secret:
      secretName: regcred
      items:
        - key: .dockerconfigjson
          path: config.json
  templates:
  - name: full
    dag:
      tasks:
      - name: clone
        template: build-container-image
    # main_clone:
    #   title: Cloning repository
    #   type: git-clone
    #   arguments:
    #     repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    #     git: github
    #     revision: "${{CF_BRANCH}}"
    #   stage: release
    
      # - name: step1
      #   template: whalesay
      #   arguments:
      #     parameters:
      #     - name: message
      #       value: DevOps Catalog
  #     - name: step2a
  #       template: gen-random-int
  #       dependencies: [step1]
  #     - name: step2b
  #       template: whalesay
  #       arguments:
  #         parameters:
  #         - name: message
  #           value: DevOps Catalog
  #       dependencies: [step1]
  #     - name: step3
  #       template: delay
  #       dependencies: [step2a, step2b]
  #     - name: step4
  #       template: whalesay
  #       arguments:
  #         parameters:
  #         - name: message
  #           value: DevOps Catalog
  #       dependencies: [step3]
  # TODO: Change args to params
  - name: build-container-image
    container:
      image: gcr.io/kaniko-project/executor:debug
      # workingDir: /src/app
      # command: [hugo]
      args:
      - --context=git://github.com/vfarcic/kaniko-demo
      - --destination=vfarcic/devops-toolkit:1.0.0
      volumeMounts:
        - name: kaniko-secret
          mountPath: /kaniko/.docker/
  # - name: build-hugo
  #   inputs:
  #     artifacts:
  #     - name: source
  #       path: /src
  #       git:
  #         repo: https://github.com/vfarcic/argo-workflows-demo.git
  #   outputs:
  #     artifacts:
  #     - name: source
  #       path: /src
  #   container:
  #     image: klakegg/hugo:0.75.1-ext-alpine
  #     workingDir: /src/app
  #     command: [hugo]
      # volumeMounts:
      # - name: workdir
      #   mountPath: /src/public

  # - name: gen-random-int
  #   script:
  #     image: python:alpine3.6
  #     command: [python]
  #     source: |
  #       import random
  #       i = random.randint(1, 100)
  #       print(i)
  # TODO: Fix it!
  # - name: k8s-ns
  #   resource:
  #     action: create
  #     manifest: |
  #       apiVersion: v1
  #       kind: ConfigMap
  #       metadata:
  #         generateName: owned-eg-
  #       data:
  #         some: value
  # - name: delay
  #   suspend:
  #     duration: "10s"